test_name: health

stages:
  - name: health
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/__/health
      method: GET
    response:
      status_code: 200
---

test_name: hello tests

stages:
  - name: hello1
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/hello1
      method: GET
    response:
      status_code: 200
      headers:
        endpoint-id: "hello1"
      json:
        hello: World
  - name: hello2
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/hello2
      method: GET
    response:
      status_code: 200
      headers:
        endpoint-id: "hello2"
        Content-Type: application/text
        Content-Length: "12"
  - name: hello3
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/hello3/alex
      method: GET
    response:
      status_code: 200
      headers:
        endpoint-id: "hello3"
        Content-Type: application/text
        Content-Length: "20"
  - name: hello4
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/hello4/go/joe
      method: GET
    response:
      status_code: 200
      headers:
        endpoint-id: "hello4"
        Content-Type: application/json
      json: 
        message: "Hello world, joe !"
  - name: hello5
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/hello5/bill/foo
      method: GET
    response:
      status_code: 200
      headers:
        endpoint-id: "hello5"
        Content-Type: application/json
      json: 
        message: "Hello world, bill !"
  - name: hello6
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/hello6/bill/sends/joe
      method: GET
    response:
      status_code: 200
      headers:
        endpoint-id: "hello6"
        Content-Type: application/json
      json: 
        bill: "says 'hello' to joe !"
  - name: hello7
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/hello7/alex/dani/foo/gdd
      method: GET
    response:
      status_code: 200
      headers:
        endpoint-id: "hello7"
        Content-Type: application/json
      json: 
        alex: "says 'hello' to dani !"
  - name: hello8
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/hello8/it/does/not/matter/last
      method: GET
    response:
      status_code: 202
      headers:
        endpoint-id: "hello8"
  - name: hello9
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/hello9/some/stuff/sender/alex/additional/stuff/receiver/dani
      method: GET
    response:
      status_code: 200
      headers:
        endpoint-id: "hello9"
        Content-Type: application/json
      json: 
        alex: "says 'hello' to dani !"
---
test_name: matchesCount
stages:
  - name: clean_hello1
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/__/matches/hello1
      method: DELETE
      auth:
        - mockgo
        - asecretPassword
    response:
      status_code: 200
  - name: request_hello1
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/hello1
      method: GET
    response:
      status_code: 200
      headers:
        endpoint-id: "hello1"
      json:
        hello: World
  - name: matches_hello1
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/__/matchesCount/hello1
      method: GET
      auth:
        - mockgo
        - asecretPassword
      headers:
        Accept: application/json
    response:
      status_code: 200
      json: 1

---
test_name: mismatchesCount
stages:
  - name: clean
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/__/mismatches
      method: DELETE
      auth:
        - mockgo
        - asecretPassword
    response:
      status_code: 200
  - name: request_hello1
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/doesnotexist
      method: GET
    response:
      status_code: 404
  - name: mismatches_count
    request:
      url: http://{tavern.env_vars.MOCKGO_HOST}/__/mismatchesCount
      method: GET
      auth:
        - mockgo
        - asecretPassword
      headers:
        Accept: application/json
    response:
      status_code: 200
      json: 1