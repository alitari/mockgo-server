// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: matchstore/matchstore.proto

package matchstore

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EndPointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EndPointRequest) Reset() {
	*x = EndPointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndPointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndPointRequest) ProtoMessage() {}

func (x *EndPointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndPointRequest.ProtoReflect.Descriptor instead.
func (*EndPointRequest) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{0}
}

func (x *EndPointRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MismatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MismatchRequest) Reset() {
	*x = MismatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MismatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MismatchRequest) ProtoMessage() {}

func (x *MismatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MismatchRequest.ProtoReflect.Descriptor instead.
func (*MismatchRequest) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{1}
}

type MatchesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matches []*Match `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
}

func (x *MatchesResponse) Reset() {
	*x = MatchesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchesResponse) ProtoMessage() {}

func (x *MatchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchesResponse.ProtoReflect.Descriptor instead.
func (*MatchesResponse) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{2}
}

func (x *MatchesResponse) GetMatches() []*Match {
	if x != nil {
		return x.Matches
	}
	return nil
}

type MatchesCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchesCount uint64 `protobuf:"varint,1,opt,name=matchesCount,proto3" json:"matchesCount,omitempty"`
}

func (x *MatchesCountResponse) Reset() {
	*x = MatchesCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchesCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchesCountResponse) ProtoMessage() {}

func (x *MatchesCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchesCountResponse.ProtoReflect.Descriptor instead.
func (*MatchesCountResponse) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{3}
}

func (x *MatchesCountResponse) GetMatchesCount() uint64 {
	if x != nil {
		return x.MatchesCount
	}
	return 0
}

type MismatchesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mismatches []*Mismatch `protobuf:"bytes,1,rep,name=mismatches,proto3" json:"mismatches,omitempty"`
}

func (x *MismatchesResponse) Reset() {
	*x = MismatchesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MismatchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MismatchesResponse) ProtoMessage() {}

func (x *MismatchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MismatchesResponse.ProtoReflect.Descriptor instead.
func (*MismatchesResponse) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{4}
}

func (x *MismatchesResponse) GetMismatches() []*Mismatch {
	if x != nil {
		return x.Mismatches
	}
	return nil
}

type MismatchesCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MismatchesCount uint64 `protobuf:"varint,1,opt,name=mismatchesCount,proto3" json:"mismatchesCount,omitempty"`
}

func (x *MismatchesCountResponse) Reset() {
	*x = MismatchesCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MismatchesCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MismatchesCountResponse) ProtoMessage() {}

func (x *MismatchesCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MismatchesCountResponse.ProtoReflect.Descriptor instead.
func (*MismatchesCountResponse) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{5}
}

func (x *MismatchesCountResponse) GetMismatchesCount() uint64 {
	if x != nil {
		return x.MismatchesCount
	}
	return 0
}

type RemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveResponse) Reset() {
	*x = RemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResponse) ProtoMessage() {}

func (x *RemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResponse.ProtoReflect.Descriptor instead.
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{6}
}

type AddAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locked bool `protobuf:"varint,1,opt,name=locked,proto3" json:"locked,omitempty"`
}

func (x *AddAllResponse) Reset() {
	*x = AddAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAllResponse) ProtoMessage() {}

func (x *AddAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAllResponse.ProtoReflect.Descriptor instead.
func (*AddAllResponse) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{7}
}

func (x *AddAllResponse) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

type Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndpointId     string                 `protobuf:"bytes,1,opt,name=endpointId,proto3" json:"endpointId,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ActualRequest  *ActualRequest         `protobuf:"bytes,3,opt,name=actualRequest,proto3" json:"actualRequest,omitempty"`
	ActualResponse *ActualResponse        `protobuf:"bytes,4,opt,name=actualResponse,proto3" json:"actualResponse,omitempty"`
}

func (x *Match) Reset() {
	*x = Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{8}
}

func (x *Match) GetEndpointId() string {
	if x != nil {
		return x.EndpointId
	}
	return ""
}

func (x *Match) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Match) GetActualRequest() *ActualRequest {
	if x != nil {
		return x.ActualRequest
	}
	return nil
}

func (x *Match) GetActualResponse() *ActualResponse {
	if x != nil {
		return x.ActualResponse
	}
	return nil
}

type Mismatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MismatchDetails string                 `protobuf:"bytes,1,opt,name=mismatchDetails,proto3" json:"mismatchDetails,omitempty"`
	Timestamp       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ActualRequest   *ActualRequest         `protobuf:"bytes,3,opt,name=actualRequest,proto3" json:"actualRequest,omitempty"`
}

func (x *Mismatch) Reset() {
	*x = Mismatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mismatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mismatch) ProtoMessage() {}

func (x *Mismatch) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mismatch.ProtoReflect.Descriptor instead.
func (*Mismatch) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{9}
}

func (x *Mismatch) GetMismatchDetails() string {
	if x != nil {
		return x.MismatchDetails
	}
	return ""
}

func (x *Mismatch) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Mismatch) GetActualRequest() *ActualRequest {
	if x != nil {
		return x.ActualRequest
	}
	return nil
}

type ActualRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method string                  `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Url    string                  `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Header map[string]*HeaderValue `protobuf:"bytes,3,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Host   string                  `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *ActualRequest) Reset() {
	*x = ActualRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualRequest) ProtoMessage() {}

func (x *ActualRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualRequest.ProtoReflect.Descriptor instead.
func (*ActualRequest) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{10}
}

func (x *ActualRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ActualRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ActualRequest) GetHeader() map[string]*HeaderValue {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ActualRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type ActualResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                   `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Header     map[string]*HeaderValue `protobuf:"bytes,2,rep,name=header,proto3" json:"header,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ActualResponse) Reset() {
	*x = ActualResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActualResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActualResponse) ProtoMessage() {}

func (x *ActualResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActualResponse.ProtoReflect.Descriptor instead.
func (*ActualResponse) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{11}
}

func (x *ActualResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ActualResponse) GetHeader() map[string]*HeaderValue {
	if x != nil {
		return x.Header
	}
	return nil
}

type HeaderValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val []string `protobuf:"bytes,1,rep,name=val,proto3" json:"val,omitempty"`
}

func (x *HeaderValue) Reset() {
	*x = HeaderValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchstore_matchstore_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeaderValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderValue) ProtoMessage() {}

func (x *HeaderValue) ProtoReflect() protoreflect.Message {
	mi := &file_matchstore_matchstore_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderValue.ProtoReflect.Descriptor instead.
func (*HeaderValue) Descriptor() ([]byte, []int) {
	return file_matchstore_matchstore_proto_rawDescGZIP(), []int{12}
}

func (x *HeaderValue) GetVal() []string {
	if x != nil {
		return x.Val
	}
	return nil
}

var File_matchstore_matchstore_proto protoreflect.FileDescriptor

var file_matchstore_matchstore_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x0f, 0x45, 0x6e,
	0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a,
	0x0f, 0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x3e, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x22, 0x3a, 0x0a, 0x14, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x12,
	0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x6d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x0a, 0x6d, 0x69,
	0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x17, 0x4d, 0x69, 0x73, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6d, 0x69,
	0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x10, 0x0a,
	0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x28, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x05, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3f, 0x0a,
	0x0d, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0d, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42,
	0x0a, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x08, 0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x28, 0x0a, 0x0f, 0x6d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x69, 0x73, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x3f, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xe0, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x3d, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x1a, 0x52, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc4, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x52, 0x0a, 0x0b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1f,
	0x0a, 0x0b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x32,
	0xf7, 0x03, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x4a,
	0x0a, 0x0c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1b,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x64, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1b, 0x2e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x11,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5a, 0x0a, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4d, 0x69, 0x73, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12,
	0x1b, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x64,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x10, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x69, 0x73, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1b,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x73, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x69, 0x74, 0x61, 0x72, 0x69, 0x2f,
	0x6d, 0x6f, 0x63, 0x6b, 0x67, 0x6f, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6d, 0x6f,
	0x63, 0x6b, 0x67, 0x6f, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_matchstore_matchstore_proto_rawDescOnce sync.Once
	file_matchstore_matchstore_proto_rawDescData = file_matchstore_matchstore_proto_rawDesc
)

func file_matchstore_matchstore_proto_rawDescGZIP() []byte {
	file_matchstore_matchstore_proto_rawDescOnce.Do(func() {
		file_matchstore_matchstore_proto_rawDescData = protoimpl.X.CompressGZIP(file_matchstore_matchstore_proto_rawDescData)
	})
	return file_matchstore_matchstore_proto_rawDescData
}

var file_matchstore_matchstore_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_matchstore_matchstore_proto_goTypes = []interface{}{
	(*EndPointRequest)(nil),         // 0: matchstore.EndPointRequest
	(*MismatchRequest)(nil),         // 1: matchstore.MismatchRequest
	(*MatchesResponse)(nil),         // 2: matchstore.MatchesResponse
	(*MatchesCountResponse)(nil),    // 3: matchstore.MatchesCountResponse
	(*MismatchesResponse)(nil),      // 4: matchstore.MismatchesResponse
	(*MismatchesCountResponse)(nil), // 5: matchstore.MismatchesCountResponse
	(*RemoveResponse)(nil),          // 6: matchstore.RemoveResponse
	(*AddAllResponse)(nil),          // 7: matchstore.AddAllResponse
	(*Match)(nil),                   // 8: matchstore.Match
	(*Mismatch)(nil),                // 9: matchstore.Mismatch
	(*ActualRequest)(nil),           // 10: matchstore.ActualRequest
	(*ActualResponse)(nil),          // 11: matchstore.ActualResponse
	(*HeaderValue)(nil),             // 12: matchstore.HeaderValue
	nil,                             // 13: matchstore.ActualRequest.HeaderEntry
	nil,                             // 14: matchstore.ActualResponse.HeaderEntry
	(*timestamppb.Timestamp)(nil),   // 15: google.protobuf.Timestamp
}
var file_matchstore_matchstore_proto_depIdxs = []int32{
	8,  // 0: matchstore.MatchesResponse.matches:type_name -> matchstore.Match
	9,  // 1: matchstore.MismatchesResponse.mismatches:type_name -> matchstore.Mismatch
	15, // 2: matchstore.Match.timestamp:type_name -> google.protobuf.Timestamp
	10, // 3: matchstore.Match.actualRequest:type_name -> matchstore.ActualRequest
	11, // 4: matchstore.Match.actualResponse:type_name -> matchstore.ActualResponse
	15, // 5: matchstore.Mismatch.timestamp:type_name -> google.protobuf.Timestamp
	10, // 6: matchstore.Mismatch.actualRequest:type_name -> matchstore.ActualRequest
	13, // 7: matchstore.ActualRequest.header:type_name -> matchstore.ActualRequest.HeaderEntry
	14, // 8: matchstore.ActualResponse.header:type_name -> matchstore.ActualResponse.HeaderEntry
	12, // 9: matchstore.ActualRequest.HeaderEntry.value:type_name -> matchstore.HeaderValue
	12, // 10: matchstore.ActualResponse.HeaderEntry.value:type_name -> matchstore.HeaderValue
	0,  // 11: matchstore.Matchstore.FetchMatches:input_type -> matchstore.EndPointRequest
	1,  // 12: matchstore.Matchstore.FetchMismatches:input_type -> matchstore.MismatchRequest
	0,  // 13: matchstore.Matchstore.FetchMatchesCount:input_type -> matchstore.EndPointRequest
	1,  // 14: matchstore.Matchstore.FetchMismatchesCount:input_type -> matchstore.MismatchRequest
	0,  // 15: matchstore.Matchstore.RemoveMatches:input_type -> matchstore.EndPointRequest
	1,  // 16: matchstore.Matchstore.RemoveMismatches:input_type -> matchstore.MismatchRequest
	2,  // 17: matchstore.Matchstore.FetchMatches:output_type -> matchstore.MatchesResponse
	4,  // 18: matchstore.Matchstore.FetchMismatches:output_type -> matchstore.MismatchesResponse
	3,  // 19: matchstore.Matchstore.FetchMatchesCount:output_type -> matchstore.MatchesCountResponse
	5,  // 20: matchstore.Matchstore.FetchMismatchesCount:output_type -> matchstore.MismatchesCountResponse
	6,  // 21: matchstore.Matchstore.RemoveMatches:output_type -> matchstore.RemoveResponse
	6,  // 22: matchstore.Matchstore.RemoveMismatches:output_type -> matchstore.RemoveResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_matchstore_matchstore_proto_init() }
func file_matchstore_matchstore_proto_init() {
	if File_matchstore_matchstore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_matchstore_matchstore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndPointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchstore_matchstore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MismatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchstore_matchstore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchstore_matchstore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchesCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchstore_matchstore_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MismatchesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchstore_matchstore_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MismatchesCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchstore_matchstore_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchstore_matchstore_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchstore_matchstore_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchstore_matchstore_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mismatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchstore_matchstore_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchstore_matchstore_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActualResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchstore_matchstore_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeaderValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_matchstore_matchstore_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_matchstore_matchstore_proto_goTypes,
		DependencyIndexes: file_matchstore_matchstore_proto_depIdxs,
		MessageInfos:      file_matchstore_matchstore_proto_msgTypes,
	}.Build()
	File_matchstore_matchstore_proto = out.File
	file_matchstore_matchstore_proto_rawDesc = nil
	file_matchstore_matchstore_proto_goTypes = nil
	file_matchstore_matchstore_proto_depIdxs = nil
}
